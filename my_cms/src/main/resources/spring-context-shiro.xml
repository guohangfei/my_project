<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"> </bean>

    <!--配置权限管理器(核心)-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--自定义登录权限模块-->
        <property name="realm" ref="jdbcRealm"> </property>
        <!-- 使用下面配置的缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 进行缓存的操作配置 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <!-- 安全管理器 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--&lt;!&ndash; 缓存管理器 使用Ehcache实现 &ndash;&gt;-->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
        <!--<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />-->
    <!--</bean>-->

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="shiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager" />
        <property name="hashAlgorithmName" value="md5" />
        <!-- md5盐值加密3次 -->
        <property name="hashIterations" value="3" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>

    <!--&lt;!&ndash; 自定义的jdbcrealm &ndash;&gt;-->
    <!--<bean id="jdbcRealm" class="shiro.JdbcRealmCustom">-->
        <!--&lt;!&ndash; 凭证匹配器 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="credentialsMatcher" ref="credentialsMatcher" />&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="cachingEnabled" value="true" />&ndash;&gt;-->
        <!--&lt;!&ndash; 如需要自定义缓存时间放开以下.修改 ehcache.xml &ndash;&gt;-->
        <!--<property name="authenticationCachingEnabled" value="true" />-->
        <!--<property name="authenticationCacheName" value="authenticationCache" />-->
        <!--<property name="authorizationCachingEnabled" value="true" />-->
        <!--<property name="authorizationCacheName" value="authorizationCache" />-->
    <!--</bean>-->

    <!--
     使用Shiro自带的JdbcRealm类
     指定密码匹配所需要用到的加密对象
     指定存储用户、角色、权限许可的数据源及相关查询语句
    -->
    <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!-- 加密算法的名称 -->
                <property name="hashAlgorithmName" value="MD5"> </property>
                <!-- 配置加密的次数 -->
                <property name="hashIterations" value="1024"> </property>
            </bean>
        </property>
        <property name="permissionsLookupEnabled" value="true"> </property>
        <property name="dataSource" ref="dataSource"> </property>
        <property name="authenticationQuery"
                  value="SELECT password FROM T_USER WHERE user_name = ?">
        </property>
        <property name="userRolesQuery"
                  value="select T_ROLE.ROLE_NAME
                   from T_USER,T_USER_ROLE,T_ROLE where T_USER.USER_NAME= ?
                   and T_USER.USER_ID=T_USER_ROLE.USER_ID
                    and T_USER_ROLE.USER_ID=T_ROLE.ROLE_ID">
        </property>
        <property name="permissionsQuery"
                  value="select T_RIGHT.RIGHT_NAME
                   from T_ROLE,T_ROLE_RIGHT,T_RIGHT where T_ROLE.ROLE_NAME= ?
                    and T_ROLE.ROLE_ID=T_ROLE_RIGHT.ROLE_ID
                     and T_ROLE_RIGHT.RIGHT_ID=T_RIGHT.RIGHT_ID">
        </property>
        <!-- 如需要自定义缓存时间放开以下.修改 ehcache.xml -->
        <property name="authenticationCachingEnabled" value="true" />
        <property name="authenticationCacheName" value="authenticationCache" />
        <property name="authorizationCachingEnabled" value="true" />
        <property name="authorizationCacheName" value="authorizationCache" />
    </bean>

    <!--<bean id="jdbcRealm" class="shiro.JdbcRealmCustom">-->
        <!--<property name="credentialsMatcher">-->
            <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
                <!--&lt;!&ndash; 加密算法的名称 &ndash;&gt;-->
                <!--<property name="hashAlgorithmName" value="MD5"> </property>-->
                <!--&lt;!&ndash; 配置加密的次数 &ndash;&gt;-->
                <!--<property name="hashIterations" value="1024"> </property>-->
            <!--</bean>-->
        <!--</property>-->
        <!--&lt;!&ndash; 如需要自定义缓存时间放开以下.修改 ehcache.xml &ndash;&gt;-->
        <!--<property name="authenticationCachingEnabled" value="true" />-->
        <!--<property name="authenticationCacheName" value="authenticationCache" />-->
        <!--<property name="authorizationCachingEnabled" value="true" />-->
        <!--<property name="authorizationCacheName" value="authorizationCache" />-->
    <!--</bean>-->



    <!-- 登出过滤器 -->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login" />
    </bean>

    <!--启用Shiro相关的注解-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
          <!--depends-on="lifecycleBeanPostProcessor"/>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

    <!-- Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、 自定义的过滤器的执行 Web应用中， Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，
        Shiro对基于Spring的Web应用提供了完美的支持 -->
    <!-- shiro filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"> </property>
        <!-- 默认的登陆访问url -->
        <property name="loginUrl" value="/login"/>
        <!-- 登陆成功后跳转的url -->
        <property name="successUrl" value="/index"/>
        <!-- 没有权限跳转的url -->
        <property name="unauthorizedUrl" value="/unauth"/>
        <property name="filterChainDefinitions">
            <value>
                <!-- 静态资源允许访问 -->
                /resources/** = anon
                /resource/** = anon
                <!-- 登录注册允许访问 -->
                /login* = anon
                /register* = anon
                <!-- 登出 -->
                /logout = logout
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->
                 <!--/admin=perms[add]-->
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->
                 /admin*=authc , roles[admin]
                <!-- 其他资源需要认证 -->
                /** = authc
            </value>
        </property>
    </bean>

</beans>