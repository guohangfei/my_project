<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="jdbcRealmCustom"></property>
    </bean>

    <!-- 自定义的jdbcrealm -->
    <bean id="jdbcRealmCustom" class="shiro.JdbcRealmCustom"></bean>

    <!-- 登出过滤器 -->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login" />
    </bean>

    <!-- Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、 自定义的过滤器的执行 Web应用中， Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，
        Shiro对基于Spring的Web应用提供了完美的支持 -->
    <!-- shiro filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"></property>
        <property name="filterChainDefinitions">
            <value>
                <!-- 静态资源允许访问 -->
                /resources/** = anon
                /resource/** = anon
                <!-- 登录注册允许访问 -->
                /login* = anon
                /register* = anon
                <!-- 登出 -->
                /logout = logout
                <!-- 其他资源需要认证 -->
                /** = authc
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->
                <!-- /user=perms[user:query] -->
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->
                <!-- /user/add=roles[manager] -->
            </value>
        </property>
    </bean>

</beans>